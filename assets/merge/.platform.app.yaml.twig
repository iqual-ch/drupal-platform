{% if deployment == "platform.sh" %}
{% if op.new_file == true %}
# This file describes an application. You can have multiple applications
# in the same project.
#
# See https://docs.platform.sh/configuration/app.html

# The name of this app. Must be unique within a project.
name: 'drupal'

# The runtime the application uses.
type: 'php:{{ runtime.php_version }}'

# Recommended memory resources for Standard plan
resources:
    base_memory: 96
    memory_ratio: 768

# Default PHP variables
variables:
    php:
        memory_limit: {{ runtime.php_memory_limit|default('256M') }}
        date.timezone: Europe/Zurich

# Default dependencies
dependencies:
    php:
        composer/composer: ^2

# Runtime extensions
runtime:
    extensions:
        - apcu
        - blackfire
        - yaml
        - imagick
        - imap
        - xsl

# The relationships of the application with services or other applications.
#
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
    database: 'db:mysql'

# The size of the persistent disk of the application (in MB).
disk: 2048

# The 'mounts' describe writable, persistent filesystem mounts in the application.
mounts:
    # The default Drupal files directory.
    /public/sites/default/files:
        source: local
        source_path: files
    # Drupal gets its own dedicated tmp directory. The settings.platformsh.php
    # file will automatically configure Drupal to use this directory.
    /tmp:
        source: local
        source_path: tmp
    # Private file uploads are stored outside the web root. The settings.platformsh.php
    # file will automatically configure Drupal to use this directory.
    /private:
        source: local
        source_path: private
    # Drush needs a scratch space for its own caches.
    /.drush:
        source: local
        source_path: drush
    # Drush will try to save backups to this directory, so it must be
    # writeable even though you will almost never need to use it.
    /drush-backups:
        source: local
        source_path: drush-backups
    # Drupal Console will try to save backups to this directory, so it must be
    # writeable even though you will almost never need to use it.
    /.console:
        source: local
        source_path: console
    # custom theme folder with theme styles being compiled on-the-fly
    /public/themes/custom:
        source: local
        source_path: custom-themes
    # custom module folder with module styles being compiled on-the-fly
    /public/modules/custom:
        source: local
        source_path: custom-modules

# Configuration of the build of this application.
build:
    flavor: composer

# The hooks executed at various points in the lifecycle of the application.
hooks:
    # The build hook runs after Composer to finish preparing up your code.
    # No services are available but the disk is writeable.
    build: 'bash ./resources/build.sh'
    # The deploy hook runs after your application has been deployed and started.
    # Code cannot be modified at this point but the database is available.
    # The site is not accepting requests while this script runs so keep it
    # fast.
    deploy: 'bash ./resources/deploy.sh'

# The configuration of app when it is exposed to the web.
web:
    locations:
        # All requests not otherwise specified follow these rules.
        /:
            # The folder from which to serve static assets, for this location.
            #
            # This is a filesystem path, relative to the application root.
            root: public

            # How long to allow static assets from this location to be cached.
            #
            # Can be a time in seconds, or -1 for no caching. Times can be
            # suffixed with "s" (seconds), "m" (minutes), "h" (hours), "d"
            # (days), "w" (weeks), "M" (months, as 30 days) or "y" (years, as
            # 365 days).
            expires: 5m

            # Redirect any incoming request to Drupals front controller.
            passthru: /index.php

            # Deny access to all static files, except those specifically allowed below.
            allow: false

            # Rules for specific URI patterns.
            rules:
                # Allow access to common static files.
                '\.(jpe?g|png|gif|svgz?|css|js|map|ico|bmp|eot|woff2?|otf|ttf)$':
                    allow: true
                ^/robots\.txt$:
                    allow: false
                    # Handle robots.txt with PHP for multi-domain setup
                    passthru: /index.php
                ^/sitemap\.xml$:
                    allow: true

                # Allow access to pagedesigner templates.
                '^/themes/custom/[^/]+/templates/includes/[^/]+\.twig$':
                    allow: true

                # Deny direct access to configuration files.
                ^/sites/sites\.php$:
                    scripts: false
                '^/sites/[^/]+/settings.*?\.php$':
                    scripts: false

        # The files directory has its own special configuration rules.
        /sites/default/files:
            # Allow access to all files in the public files directory.
            allow: true
            expires: 5m
            passthru: /index.php
            root: public/sites/default/files

            # Do not execute PHP scripts from the writeable mount.
            scripts: false

            rules:
                # Provide a longer TTL (2 weeks) for aggregated CSS and JS files.
                ^/sites/default/files/(css|js):
                    expires: 2w

crons:
    # Run Drupals cron tasks every 19 minutes.
    drupal:
        spec: '*/19 * * * *'
        cmd: 'cd public ; drush core-cron'

source:
    root: app

{% else %}
name: 'drupal'
type: 'php:{{ runtime.php_version }}'
{% if runtime.php_memory_limit %}
variables:
    php:
        memory_limit: {{ runtime.php_memory_limit }}
{% endif %}
{% endif %}
{% endif %}